norm=0
bold=1
dim=2
blink=5

cyan="38;5;45"
red="38;5;196"
green=92
green="38;5;206"
yellow=93
orange="38;5;202"

endps=$'%{\033[0m%}'

files_changed_warning_threshold=(6 4)
battery_warning_threshold=(5 3)

PR_DIROPN=
PR_DIRCLS=
PR_RSTATS=''
PR_CHRGST=''
PR_ZLMODE='--VINS--'

function get_color {
    local ret=$'%{\033['
    local pret=$(printf ";%s" $@)

    pret=${pret:1}

    if [[ -z $pret ]]; then
        pret=0
    fi

    echo $ret$pret'm%}'
}

function echo_exit {
    local le=$?

    if [ $le -eq 0 ]; then
        echo "$(get_color $norm $green)$le$endps"
    else
        echo "$(get_color $bold $red)$le$endps"
    fi
}

function get_dir_color {
    local dclr=$green

    if [ "$(pwd | grep -c $HOME)" -eq 0 ]; then
        dclr=$red
    fi

    local clrstr=$(get_color $bold $dclr)

    PR_DIROPN="$(echo $clrstr)[$endps"
    PR_DIRCLS="$(echo $clrstr)]$endps"
}

function repo_stats {
    PR_RSTATS=''

    local gs
    gs=$(git diff --shortstat 2> /dev/null)

    if [ $? -eq 0 ]; then
        local fch="$(echo $gs | sed -E 's/^ ([0-9]+) f.+$/\1/')"
        local ins="$(echo $gs | sed -E 's/^.+([0-9]+) i.+$/\1/')"
        local del="$(echo $gs | sed -E 's/^.+([0-9]+) d.+$/\1/')"

        [ $ins ] && ins=" $(get_color $norm $green)+$ins$endps"
        [ $del ] && del=" $(get_color $norm $red)-$del$endps"

        if [ $fch ]; then
            if [ $fch -lt ${files_changed_warning_threshold[1]} ]; then
                fch=" $(get_color $bold $green)~$fch$endps"
            elif [ $fch  -le ${files_changed_warning_threshold[0]} ]; then
                fch=" $(get_color $bold $orange)~$fch$endps"
            else
                fch=" $(get_color $bold $red)~$fch$endps"
            fi
        fi

        local rev=$(git rev-parse --abbrev-ref HEAD)

        if [[ $rev = HEAD ]]; then
            rev="$(get_color $bold $red)detached $(git rev-parse --short HEAD)$endps"
        fi

        PR_RSTATS="[git $rev$fch$ins$del]"
    fi
}

function get_battery_level {
    echo $@ | perl -pe 's/-InternalBattery-0\s+(\d+)%.+/\1/'
}

function get_battery_info {
    local btst="$(pmset -g batt | grep Battery-0)"
    local bat=$(printf "%.0f" $(echo "$(get_battery_level $btst) / 10" | bc -l))
    local batstr
    local chst
    local chclr=$cyan

    case $bat in
        [$((${battery_warning_threshold[0]} + 1))-9]|10)
            batstr=$(get_color $bold $green)
            ;;
        [${battery_warning_threshold[1]}-${battery_warning_threshold[0]}])
            batstr=$(get_color $bold $orange)
            ;;
        [2-${battery_warning_threshold[1]}])
            batstr=$(get_color $bold $red)
            ;;
        *)
            bat=10
            batstr=$(get_color $blink $red)
            ;;
    esac

    local bch="$(printf "%$(echo $bat)s" | tr " " "●")"

    batstr=$batstr$bch$endps$(get_color $bold)$(printf "%$(echo $((10 - $bat)))s" | tr " " "●")$endps

    case "$(echo $btst | perl -pe 's/\s*-InternalBattery-0\s+\d+%;\s+(.+?);.+/\1/')" in
        discharging)
            chclr=$red
            ;;
        charging)
            chclr=$orange
            ;;
        charged)
            chclr=$green
            ;;
    esac

    chst=$(get_color $bold $chclr)

    PR_CHRGST=$(echo -e $chst'\u2502'$endps$batstr$chst'\u251c'$endps)
}

function get_info {
    echo $'\n'"%(0?.$(get_color $norm $green).$(get_color $bold $red))%?$endps <%!$(get_color $bold)-$endps%l>" $(echo_repo_stats)
}

function zle-keymap-select {
    case $KEYMAP in
        vicmd)
            PR_ZLMODE='--VCMD--'
            ;;
        viins)
            PR_ZLMODE='--VINS--'
            ;;
        main)
            PR_ZLMODE='--MAIN--'
            ;;
        emacs)
            PR_ZLMODE='--EMCS--'
            ;;
    esac

    zle reset-prompt
}

zle -N zle-keymap-select

setopt prompt_subst

function precmd {
    get_dir_color
    repo_stats
    get_battery_info
}

PS1=$'\n'"%(0?.$(get_color $norm $green).$(get_color $bold $red))%?$endps "
PS1+='$PR_ZLMODE '
PS1+="<%!$(get_color $bold)-$endps%l> "
PS1+='$PR_RSTATS'
PS1+=$'\n%m:$PR_DIROPN'"$endps%c"'$PR_DIRCLS '
PS1+="%(!.$(get_color $blink $red)%n$endps$(get_color $bold $red)#.$(get_color $norm $green)%n$endps$(get_color $bold $green)%%)$endps "

RPS1='$PR_CHRGST'
